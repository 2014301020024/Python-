1.什么是BIF？

答：BIF = Bulit-in Functions，即内置函数。为方便程序员快速编写脚本程序，Python 提供了非常丰富的内置函数，我们只需要直接调用即可，例如“print”、“int”。

2.python3中一共提供了多少个BIF？

答：输入代码 >>>dir(__builtins__)  ##builtins前后均为两个下划线
   出现以下['ArithmeticError', 'AssertionError', 'AttributeError', 'BaseException', 'BlockingIOError', 'BrokenPipeError', 'BufferError', 
   'BytesWarning', 'ChildProcessError', 'ConnectionAbortedError', 'ConnectionError', 'ConnectionRefusedError', 'ConnectionResetError', 
   'DeprecationWarning', 'EOFError', 'Ellipsis', 'EnvironmentError', 'Exception', 'False', 'FileExistsError', 'FileNotFoundError',
   'FloatingPointError', 'FutureWarning', 'GeneratorExit', 'IOError', 'ImportError', 'ImportWarning', 'IndentationError', 'IndexError', 
   'InterruptedError', 'IsADirectoryError', 'KeyError', 'KeyboardInterrupt', 'LookupError', 'MemoryError', 'ModuleNotFoundError', 
   'NameError', 'None', 'NotADirectoryError', 'NotImplemented', 'NotImplementedError', 'OSError', 'OverflowError', 
   'PendingDeprecationWarning', 'PermissionError', 'ProcessLookupError', 'RecursionError', 'ReferenceError', 'ResourceWarning',
   'RuntimeError', 'RuntimeWarning', 'StopAsyncIteration', 'StopIteration', 'SyntaxError', 'SyntaxWarning', 'SystemError', 'SystemExit', 
   'TabError', 'TimeoutError', 'True', 'TypeError', 'UnboundLocalError', 'UnicodeDecodeError', 'UnicodeEncodeError', 'UnicodeError', 
   'UnicodeTranslateError', 'UnicodeWarning', 'UserWarning', 'ValueError', 'Warning', 'WindowsError', 'ZeroDivisionError', 
   '__build_class__', '__debug__', '__doc__', '__import__', '__loader__', '__name__', '__package__', '__spec__', 'abs', 'all', 'any',
   'ascii', 'bin', 'bool', 'bytearray', 'bytes', 'callable', 'chr', 'classmethod', 'compile', 'complex', 'copyright', 'credits', 'delattr',
   'dict', 'dir', 'divmod', 'enumerate', 'eval', 'exec', 'exit', 'filter', 'float', 'format', 'frozenset', 'getattr', 'globals', 'hasattr',
   'hash', 'help', 'hex', 'id', 'input', 'int', 'isinstance', 'issubclass', 'iter', 'len', 'license', 'list', 'locals', 'map', 'max', 
   'memoryview', 'min', 'next', 'object', 'oct', 'open', 'ord', 'pow', 'print', 'property', 'quit', 'range', 'repr', 'reversed', 'round',
   'set', 'setattr', 'slice', 'sorted', 'staticmethod', 'str', 'sum', 'super', 'tuple', 'type', 'vars', 'zip']
   共 68 个内置函数。
   
3.在Python中赋值的标识符一定要前后完全一样，例如Love = "Jiaonan"中对Love进行了赋值，后文中若出现love表示，则会出错，因为对Python来说Love和love是完全
  不同的两个赋值标识符。
  
4.在python中一定要严格缩进！！！这使得Python的代码显得非常精简并且有层次。如果没有正确缩进，运行的代码可能会与你所期望的大相径庭。

5.“ = ”和“ == ”表示不同的含义,其中 “=”代表赋值，而“==”代表的是左右两边文本、形式、数字大小相同。

6.拼接字符串应如下：##数字和字符串不能直接拼接，需要进行转换，例如str(5)便把5变成了"5".
  1、"I love " + " you！"
  2、"I love " + "1" + " you！"

7.编写程序:love.py
  code:
       name = input("Xie Jiaonan")
       print(name + ", I love you so much")
  
8.编写一个calc.py 要求用户输入1到100之间数字并判断，输入符合要求打印“你妹好漂亮”，不符合要求则打印“你大爷好丑”
  code:
       num = input ("请输入一个在1到100内的数字:") ##这里输入50的话，即为"50"
       if 1 <= int(num) < 50 :                   ##这里用int()函数把"50"变成了数字50才可以接下来进行判断
          print("你真的好美丽!")
       else:
          print("你长得好生俊俏啊！")
  
  
  
